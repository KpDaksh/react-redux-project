{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART } from \"../constants/actionTypes\";\nconst INIT_STATE = [];\nconst cartReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const isProductPresentInTheCart = state.find(item => item.id == action.payload.id);\n      return isProductPresentInTheCart ? state.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item) : [...state, {\n        ...action.payload,\n        quantity: 1\n      }];\n    case REMOVE_FROM_CART:\n      const product = state.find(item => item.id == action.payload.id);\n      return product.quantity === 1 ? state.filter(item => item.id != action.payload.id) : state.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item);\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["ADD_TO_CART","REMOVE_FROM_CART","INIT_STATE","cartReducer","state","action","type","isProductPresentInTheCart","find","item","id","payload","map","quantity","product","filter"],"sources":["C:/Users/TEST/OneDrive/Desktop/AlmaBetter/Project/react-redux-Projectapp/src/State/reducers/cart.js"],"sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../constants/actionTypes\"\n\n\nconst INIT_STATE=[]\n\n\nconst cartReducer=(state=INIT_STATE, action)=>{\n    switch(action.type){\n        case ADD_TO_CART:\n            const isProductPresentInTheCart= state.find((item)=>item.id==action.payload.id)\n            \n            return isProductPresentInTheCart?\n                    state.map(item=>\n                        item.id===action.payload.id ?{...item,quantity:item.quantity+1}\n                        : item\n                    )\n                    : [...state, {...action.payload,quantity:1}];\n\n        case REMOVE_FROM_CART:\n            const product= state.find((item)=>item.id==action.payload.id)        \n            \n            return product.quantity ===1 ?\n                        state.filter((item)=>item.id!=action.payload.id)\n                        :state.map(item=>\n                            item.id===action.payload.id ?{...item,quantity:item.quantity-1}\n                            : item\n                        )\n        default:\n            return state\n    }\n}\n\nexport default cartReducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,0BAA0B;AAGxE,MAAMC,UAAU,GAAC,EAAE;AAGnB,MAAMC,WAAW,GAACA,CAACC,KAAK,GAACF,UAAU,EAAEG,MAAM,KAAG;EAC1C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKN,WAAW;MACZ,MAAMO,yBAAyB,GAAEH,KAAK,CAACI,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,IAAEL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAE/E,OAAOH,yBAAyB,GACxBH,KAAK,CAACQ,GAAG,CAACH,IAAI,IACVA,IAAI,CAACC,EAAE,KAAGL,MAAM,CAACM,OAAO,CAACD,EAAE,GAAE;QAAC,GAAGD,IAAI;QAACI,QAAQ,EAACJ,IAAI,CAACI,QAAQ,GAAC;MAAC,CAAC,GAC7DJ,IACN,CAAC,GACC,CAAC,GAAGL,KAAK,EAAE;QAAC,GAAGC,MAAM,CAACM,OAAO;QAACE,QAAQ,EAAC;MAAC,CAAC,CAAC;IAExD,KAAKZ,gBAAgB;MACjB,MAAMa,OAAO,GAAEV,KAAK,CAACI,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,IAAEL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAE7D,OAAOI,OAAO,CAACD,QAAQ,KAAI,CAAC,GAChBT,KAAK,CAACW,MAAM,CAAEN,IAAI,IAAGA,IAAI,CAACC,EAAE,IAAEL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC,GAC/CN,KAAK,CAACQ,GAAG,CAACH,IAAI,IACXA,IAAI,CAACC,EAAE,KAAGL,MAAM,CAACM,OAAO,CAACD,EAAE,GAAE;QAAC,GAAGD,IAAI;QAACI,QAAQ,EAACJ,IAAI,CAACI,QAAQ,GAAC;MAAC,CAAC,GAC7DJ,IACN,CAAC;IACjB;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}